import java.io.*;
import java.util.*;

public class TwoColorGraph {
	public static void main(String[] args) throws FileNotFoundException
	{
		System.out.println("Hi");
		//Initialize the Graph
		try {
			File f = new File(args[0]); //Find File
			Scanner in = new Scanner(f); //Open File
			Vertex[] nodes = new Vertex[Integer.parseInt(in.nextLine())+1]; //Initialize graph array size with first line in file
			for(int i=1; i<nodes.length; i++)
			{
				nodes[i] = new Vertex(); //Create all them vertices.
			}
			while(in.hasNextLine()) //Go through entire file
			{
				String[] line = in.nextLine().split("\\,"); //Split current line at comma to extract two edges
				int edge1 = Integer.parseInt(line[0]); //First edge connects vertex
				int edge2 = Integer.parseInt(line[1]); //To the second edge
				nodes[edge1].addEdge(edge2); //Create edge from node to other node
				nodes[edge2].addEdge(edge1); //Create return edge since its a undirected graph
			}
			in.close(); //Close the file. For fun really. 
		} catch(Exception g) { g.printStackTrace(); } //Throw Error, break, crash burn, run command "rm -rf /"
		
	}//
	
	public void depthFirstSearch() //Recursive depth first search part of the program
	{
		
	}//
	
	


}

class Vertex{
	//0 = White
	//1 = Grey
	//2 = Black
	int color = 0;
	int[] edges;
	public void Node()
	{
		System.out.println("Cheese");
	}
	public void addEdge(int edge)
	{
		//Add an edge to vertex. Make a larger array each time. 
		int[] temp = new int[edges.length + 1];
		for(int i=0; i<temp.length; i++)
		{
			temp[i] = edges[i]; //Add all old edges to temp
		}
		temp[temp.length] = edge; //Add final edge
	}
	public void setColor(String val)
	{
		if(val.equals("white")){ color = 0; }
		if(val.equals("gray")){ color = 1; }
		if(val.equals("black")){ color = 2; }
	}
}

class Puppy{
	   public Puppy(String name){
	      System.out.println("Passed Name is :" + name ); 
	   }
	   public static void main(String []args){
	      Puppy myPuppy = new Puppy( "Goober" );
	   }
	}